
#Define syncPos as desired
global syncPos=[d2r(-91.71),d2r(-98.96),d2r(-126.22),d2r(-46.26),d2r(91.39),d2r(-1.78)]
#Initialization of Variables
global moveTarget = p[0, 0, 0, 0, 0, 0]
global ftPartner = p[0, 0, 0, 0, 0, 0]
global inPosSync = 0
global go = 0
global pose = p[0.010, -0.278,0.408,0.0,-3.16,-0.04]
global functionStatus = 0

def movelPartner(pose, a=1.2, v=0.25, t=0, r=0):
 # popup([a,v,t,r],[a,v,t,r])
  write_output_integer_register(25, 10)
  while (functionStatus != 1):  # Wait for acknowledgment
    functionStatus = read_input_integer_register(25)
  end
  write_target(pose)
  write_output_float_register(30,a)
  write_output_float_register(31,v)
  write_output_float_register(32,t)
  write_output_float_register(33,r)
  while(functionStatus != 2 ):
    hile (functionStatus != 2):  # Wait for execution completion
    functionStatus = read_input_integer_register(25)
  end

  write_output_integer_register(25, 0)
end


def write_target(target):
  write_output_float_register(24,target[0])
  write_output_float_register(25,target[1])
  write_output_float_register(26,target[2])
  write_output_float_register(27,target[3])
  write_output_float_register(28,target[4])
  write_output_float_register(29,target[5])
end

write_output_integer_register(24, 1)
write_output_integer_register(25, 0)
# popup(inPosSync, "robot is on", False)
#waiting for partner to turn on  
while (inPosSync != 1 and inPosSync != 2 ):
    global inPosSync = read_input_integer_register(24)
    # popup(inPosSync, "Waiting for partner to be ready. Status:", False)  
    sleep(7)
end
# popup(inPosSync, "I got a 1 or 2 from the other robot", True)

#Moving to sync postion
movej(syncPos, a=1.3962634015954636, v=1.0471975511965976)
write_output_integer_register(24, 2)

#waiting for partner to arrive to sync position
while (inPosSync != 2):
    global inPosSync = read_input_integer_register(24)
end
sleep(0.5)


while (True):
  startTime = time(mode = 2)
  #popup(startTime, "time stamp", True)
  write_output_integer_register(24, 3)
  global go=read_input_integer_register(24)
  while (go != 3):
    go=read_input_integer_register(24)
  end
  # startTime = time(mode = 2)
  # popup(startTime, "time stamp", True)

  moveN = 0
  movel(pose)
  popup("master performed " + to_str(moveN)+ " move", "status", blocking = True)
  movelPartner(pose, a=1.2, v=0.25, t=0, r=0)
  popup("follower performed " + to_str(moveN)+ " move", "status", blocking = True)
  moveN = moveN + 1
  pose[2] = pose[2] + 0.1
  movel(pose)
  popup("master performed " + to_str(moveN)+ " move", "status", blocking = True)
  movelPartner(pose, a=1.2, v=0.25, t=0, r=0)
  popup("follower performed " + to_str(moveN)+ " move", "status", blocking = True)
  moveN = moveN + 1
  pose[1] = pose[1] + 0.1
  movel(pose)
  popup("master performed " + to_str(moveN)+ " move", "status", blocking = True)
  movelPartner(pose, a=1.2, v=0.25, t=0, r=0)
  popup("follwer performed " + to_str(moveN)+ " move", "status", blocking = True)
  moveN = moveN + 1
  pose[2] = pose[2] - 0.1
  movel(pose)
  popup("master performed " + to_str(moveN)+ " move", "status", blocking = True)
  movelPartner(pose, a=1.2, v=0.25, t=0, r=0)
  popup("follower performed " + to_str(moveN)+ " move", "status", blocking = True)
  moveN = moveN + 1
  pose[1] = pose[1] - 0.1
 
end

