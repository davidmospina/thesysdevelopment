def unnamed():
  global _hidden_verificationVariable=0
  step_count_47e45bda_5195_4adf_beb6_00c513fd0fc4 = 0.0
  thread Step_Counter_Thread_eb66b632_50e2_48d5_aa45_48d4d1ec11a7():
    while (True):
      step_count_47e45bda_5195_4adf_beb6_00c513fd0fc4 = step_count_47e45bda_5195_4adf_beb6_00c513fd0fc4 + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_eb66b632_50e2_48d5_aa45_48d4d1ec11a7()
  set_gravity([0.0, 0.0, 9.82])
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_tcp(p[0.0,0.0,0.0,0.0,0.0,0.0])
  set_safety_mode_transition_hardness(1)
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_target_payload(0.000000, [0.000000, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000])
  # begin: URCap Installation Node
  #   Source: External Control, 1.0.5, FZI Research Center for Information Technology
  #   Type: External Control
  # end: URCap Installation Node
  while (True):
    $ 2 "Robot Program"
    $ 3 "Script: squereTracking.script"
    global center = p[0.5, 0.0, 0.2, 3.14159, 0, 0]
    
    length = 0.2
    l = length / 2
    global velocity = 0.005
    global delta = velocity / (500)
    reset_world_model()
    add_frame("center", center)
    add_frame("corner1", p[l, l, 0, 0, 0, 0], "center")
    add_frame("corner2", p[-l, l, 0, 0, 0, 0], "center")
    add_frame("corner3", p[-l, -l, 0, 0, 0, 0], "center")
    add_frame("corner4", p[l, -l, 0, 0, 0, 0], "center")
    
    attach_frame("center", "base")
    attach_frame("corner1", "center")
    attach_frame("corner2", "center")
    attach_frame("corner3", "center")
    attach_frame("corner4", "center")
    
    global running = True
    thread duration():
      steps = 0
      while (True):
        if (steps > 10000):
          running = False
          break
        end
        steps = steps + 1
        sync()
      end
    end
    
    thread tracking():
      dy = 0
      dz = 0
      rz = 0
    
      frame_tracking_enable("center")
    
      while (running):
        dy = dy + delta
        dz = dz + delta
        rz = rz - 12 * delta
    
        newCenter = p[center[0], center[1] + dy, center[2] + dz, center[3], center[4], center[5]]
    
        move_frame("center", newCenter)                       # translate center within the world
        move_frame("center", p[0, 0, 0, 0, 0, rz], "center")  # rotate about itself
    
        sync()
      end
    end
    
    frame_tracking_enable("center")
    
    looping = True
    
    movel("center")
    
    did = run duration()
    tid = run tracking()
    
    while (running):
      vel = 0.1
    
      movel("corner2", v=vel)
      movel("corner3", v=vel)
      movel("corner4", v=vel)
      movel("corner1", v=vel)
    end
    
    frame_tracking_disable()
    
  end
end
